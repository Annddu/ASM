     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 6162636465                  s1 db 'a','b','c','d','e'
    15                                      l1 equ $-s1
    16 00000005 060708                      s2 db 6,7,8
    17                                      l2 equ $-s2
    18                                      lend equ l1+l2
    19 00000008 00<rept>                    d times lend db 0
    20                                      ;abcde876
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 B905000000                      mov ecx, l1
    27 00000005 BE00000000                      mov esi, 0
    28 0000000A BF00000000                      mov edi, 0
    29 0000000F E310                            jecxz final_loop1
    30                                          loop1:
    31 00000011 8A86[00000000]                      mov al, [s1+esi]
    32 00000017 8887[08000000]                      mov [d+edi], al
    33 0000001D 46                                  inc esi
    34 0000001E 47                                  inc edi
    35 0000001F E2F0                                loop loop1
    36                                          final_loop1:
    37                                          
    38 00000021 B90C000000                      mov ecx, 12
    39 00000026 BE02000000                      mov esi, l2-1
    40 0000002B 67E310                          jcxz final_loop2
    41                                          loop2:
    42 0000002E 8A86[05000000]                      mov al, [s2+esi]
    43 00000034 8887[08000000]                      mov [d+edi], al
    44 0000003A 4E                                  dec esi
    45 0000003B 47                                  inc edi
    46 0000003C E2F0                                loop loop2
    47                                          final_loop2:
    48                                          
    49                                          ; exit(0)
    50 0000003E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000040 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
