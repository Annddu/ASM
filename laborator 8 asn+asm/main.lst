     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit,printf,scanf; add the external functions that we need
     5                                  import exit msvcrt.dll    
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 00                          n db 0
    11 00000001 456E7465722000              message db "Enter ", 0
    12 00000008 456C656D656E74206E-         element_enter db "Element number %d-> ", 0
    12 00000011 756D6265722025642D-
    12 0000001A 3E2000             
    13 0000001D 25642000                    format db "%d " , 0
    14                                      ;sir_numere times 100 dd 0
    15                                     
    16                                  segment code use32 class=code
    17                                      start:
    18                                          ;read n
    19 00000000 68[01000000]                    push dword message ; ! on the stack is placed the address of the string, not its value
    20 00000005 FF15[00000000]                  call [printf]      ; call function printf for printing
    21 0000000B 83C404                          add esp, 4*1       ; free parameters on the stack; 4 = size of dword; 1 = number of parameters
    22                                                                                     
    23                                          ; will call scanf(format, n) => will read a number in variable n
    24                                          ; place parameters on stack from right to left
    25 0000000E 68[00000000]                    push dword n       ; ! addressa of n, not value
    26 00000013 68[1D000000]                     push dword format
    27 00000018 FF15[00000000]                  call [scanf]       ; call function scanf for reading
    28 0000001E 83C408                          add esp, 4 * 2 
    29                                          
    30                                          ;loop for reading numbers
    31                                          ; mov ECX, dword[n]
    32                                          ; mov ESI, 0
    33                                          ; jecxz end_loop
    34                                          ; read_loop:
    35                                              ; push ECX
    36                                              ; push ESI
    37                                              
    38                                              ; push dword ESI
    39                                              ; push dword element_enter
    40                                              ; call [printf]
    41                                              ; add ESP, 4 * 2
    42                                              
    43                                              ; ; push dword EAX
    44                                              ; ; push dword format
    45                                              ; ; call[scanf]
    46                                              ; ; add ESP, 4 * 2
    47                                              
    48                                              
    49                                              ; pop ESI
    50                                              ; pop ECX
    51                                              ; inc ESI
    52                                              ; loop read_loop
    53                                          ; end_loop:
    54                                          
    55 00000021 6A00                            push dword 0
    56 00000023 FF15[00000000]                  call [exit] 
