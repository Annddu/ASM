     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0A                          a db 10
    14 00000001 0A                          b db 10
    15 00000002 0A                          c db 10
    16 00000003 0A00                        d dw 10
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; (50-b-c)*2+a*a+d
    22                                          ;  a,b,c - byte, d - word
    23                                          
    24 00000000 B032                            mov AL, 50
    25 00000002 2A05[01000000]                  sub AL, [b]
    26 00000008 2A05[02000000]                  sub AL, [c]
    27 0000000E B102                            mov CL, 2
    28 00000010 F6E1                            mul CL
    29                                          
    30 00000012 6689C3                          mov BX, AX
    31                                          
    32 00000015 A0[00000000]                    mov AL, [a]
    33 0000001A F625[00000000]                  mul byte [a]
    34                                          
    35 00000020 6601D8                          add AX, BX
    36 00000023 660305[03000000]                add AX, [d] 
    37                                          
    38                                      
    39                                          ; exit(0)
    40 0000002A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 0000002C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
